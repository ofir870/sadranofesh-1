{"ast":null,"code":"import axios from'axios';var api=axios.create({baseURL:'http://localhost:5000/api'});//user api\nexport var createUser=function createUser(user){return api.post(\"/user\",user).then(function(){});};export var getUsers=function getUsers(){return api.post(\"/get-users\");};export var updateUserById=function updateUserById(id,payload){return api.put(\"/user/\".concat(id),payload);};export var deleteUserById=function deleteUserById(id){return api.delete(\"/user/\".concat(id));};export var getUserById=function getUserById(id){return api.post(\"/user-by-id/\".concat(id));};//order api\nexport var createOrder=function createOrder(order){return api.post(\"/order\",order).then(function(){});};export var getOrders=function getOrders(){return api.post(\"/get-orders\");};export var getNotAprovedOrders=function getNotAprovedOrders(){return api.post(\"/get-not-aproved-orders\");};export var getAprovedOrders=function getAprovedOrders(){return api.post(\"/get-aproved-orders\");};export var ordersAproved=function ordersAproved(id,payload){return api.put(\"/update-order/\".concat(id),payload);};export var deleteOrderById=function deleteOrderById(id){return api.delete(\"/delete-order/\".concat(id));};export var getOrdersByUserName=function getOrdersByUserName(username){return api.post(\"/get-orders-by-username/\".concat(username));};var apis={createUser:createUser,createOrder:createOrder,getUsers:getUsers,getOrders:getOrders,updateUserById:updateUserById,deleteUserById:deleteUserById,deleteOrderById:deleteOrderById,getUserById:getUserById,getNotAprovedOrders:getNotAprovedOrders,getAprovedOrders:getAprovedOrders,ordersAproved:ordersAproved,getOrdersByUserName:getOrdersByUserName};export default apis;","map":{"version":3,"sources":["C:/Users/Ofir/Documents/GitHub/sadranofesh-1/client/src/api/index.js"],"names":["axios","api","create","baseURL","createUser","user","post","then","getUsers","updateUserById","id","payload","put","deleteUserById","delete","getUserById","createOrder","order","getOrders","getNotAprovedOrders","getAprovedOrders","ordersAproved","deleteOrderById","getOrdersByUserName","username","apis"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACvBC,OAAO,CAAE,2BADc,CAAb,CAAZ,CAGA;AAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,QAAIJ,CAAAA,GAAG,CAACK,IAAJ,SAAkBD,IAAlB,EAAwBE,IAAxB,CAA6B,UAAM,CAAG,CAAtC,CAAJ,EAAvB,CACP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMP,CAAAA,GAAG,CAACK,IAAJ,cAAN,EAAjB,CACP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAKC,OAAL,QAAiBV,CAAAA,GAAG,CAACW,GAAJ,iBAAiBF,EAAjB,EAAuBC,OAAvB,CAAjB,EAAvB,CACP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAH,EAAE,QAAIT,CAAAA,GAAG,CAACa,MAAJ,iBAAoBJ,EAApB,EAAJ,EAAzB,CACP,MAAO,IAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAL,EAAE,QAAIT,CAAAA,GAAG,CAACK,IAAJ,uBAAwBI,EAAxB,EAAJ,EAAtB,CAEP;AACA,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,QAAIhB,CAAAA,GAAG,CAACK,IAAJ,UAAmBW,KAAnB,EAA0BV,IAA1B,CAA+B,UAAM,CAAG,CAAxC,CAAJ,EAAzB,CACP,MAAO,IAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMjB,CAAAA,GAAG,CAACK,IAAJ,eAAN,EAAlB,CACP,MAAO,IAAMa,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,SAAMlB,CAAAA,GAAG,CAACK,IAAJ,2BAAN,EAA5B,CACP,MAAO,IAAMc,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMnB,CAAAA,GAAG,CAACK,IAAJ,uBAAN,EAAzB,CACP,MAAO,IAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,EAAD,CAAKC,OAAL,QAAiBV,CAAAA,GAAG,CAACW,GAAJ,yBAAyBF,EAAzB,EAA+BC,OAA/B,CAAjB,EAAtB,CACP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAZ,EAAE,QAAIT,CAAAA,GAAG,CAACa,MAAJ,yBAA4BJ,EAA5B,EAAJ,EAA1B,CACP,MAAO,IAAMa,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,QAAQ,QAAIvB,CAAAA,GAAG,CAACK,IAAJ,mCAAoCkB,QAApC,EAAJ,EAApC,CAIP,GAAMC,CAAAA,IAAI,CAAG,CACXrB,UAAU,CAAVA,UADW,CAEXY,WAAW,CAAXA,WAFW,CAGXR,QAAQ,CAARA,QAHW,CAIXU,SAAS,CAATA,SAJW,CAKXT,cAAc,CAAdA,cALW,CAMXI,cAAc,CAAdA,cANW,CAOXS,eAAe,CAAfA,eAPW,CAQXP,WAAW,CAAXA,WARW,CASXI,mBAAmB,CAAnBA,mBATW,CAUXC,gBAAgB,CAAhBA,gBAVW,CAWXC,aAAa,CAAbA,aAXW,CAYXE,mBAAmB,CAAnBA,mBAZW,CAAb,CAeA,cAAeE,CAAAA,IAAf","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n})\r\n//user api\r\n\r\nexport const createUser = user => api.post(`/user`, user).then(() => { });\r\nexport const getUsers = () => api.post(`/get-users`)\r\nexport const updateUserById = (id, payload) => api.put(`/user/${id}`, payload)\r\nexport const deleteUserById = id => api.delete(`/user/${id}`)\r\nexport const getUserById = id => api.post(`/user-by-id/${id}`)\r\n\r\n//order api\r\nexport const createOrder = order => api.post(`/order`, order).then(() => { });\r\nexport const getOrders = () => api.post(`/get-orders`)\r\nexport const getNotAprovedOrders = () => api.post(`/get-not-aproved-orders`)\r\nexport const getAprovedOrders = () => api.post(`/get-aproved-orders`)\r\nexport const ordersAproved = (id, payload) => api.put(`/update-order/${id}`, payload)\r\nexport const deleteOrderById = id => api.delete(`/delete-order/${id}`)\r\nexport const getOrdersByUserName = username => api.post(`/get-orders-by-username/${username}`)\r\n\r\n\r\n\r\nconst apis = {\r\n  createUser,\r\n  createOrder,\r\n  getUsers,\r\n  getOrders,\r\n  updateUserById,\r\n  deleteUserById,\r\n  deleteOrderById,\r\n  getUserById,\r\n  getNotAprovedOrders,\r\n  getAprovedOrders,\r\n  ordersAproved,\r\n  getOrdersByUserName\r\n}\r\n\r\nexport default apis"]},"metadata":{},"sourceType":"module"}