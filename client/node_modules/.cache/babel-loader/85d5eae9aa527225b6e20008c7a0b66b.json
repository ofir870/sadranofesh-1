{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\GitHub\\\\sadranofesh-1\\\\client\\\\src\\\\pages\\\\Orders.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport '../style/ManageUsers.css';\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getNotAprovedOrders().then(orders => {\n        console.log(orders);\n        this.setState({\n          orders: orders.data.data\n        });\n        console.log(' Aproved-orders-List -> render -> orders', orders);\n      });\n    };\n\n    this.updateOrderTrue = async id => {\n      const aproved = \"true\";\n      const payload = {\n        aproved\n      };\n      await api.ordersAproved(id, payload).then(res => {\n        let index = this.state.orders.findIndex(order => order.id = id);\n        let array = this.state.orders;\n        array.splice(index, 1);\n        this.setState({\n          orders: array\n        });\n      });\n    };\n\n    this.updateOrderFalse = async id => {\n      const aproved = \"false\";\n      const payload = {\n        aproved\n      };\n      await api.ordersAproved(id, payload).then(res => {\n        let index = this.state.orders.findIndex(order => order.id = id);\n        let array = this.state.orders;\n        array.splice(index, 1);\n        this.setState({\n          orders: array\n        });\n      });\n    };\n\n    this.state = {\n      orders: []\n    };\n    this.updateOrderTrue = this.updateOrderTrue.bind(this);\n    this.orderNotAproved = this.updateOrderFalse.bind(this);\n  }\n\n  renderTableData() {\n    console.log(this.state.orders);\n\n    if (this.state.orders === []) {\n      return this.state.orders.map((orders, index) => {\n        const _id = orders._id,\n              startDate = orders.startDate,\n              endDate = orders.endDate,\n              userName = orders.userName,\n              aproved = orders.aproved,\n              note = orders.note,\n              createdAt = orders.createdAt; //destructuring\n\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, startDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, endDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, userName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, note), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, aproved), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, createdAt.split(\"T\")[0]), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" \", React.createElement(\"input\", {\n          onClick: () => this.updateOrderTrue(_id, aproved),\n          type: \"button\",\n          value: \"\\u05D0\\u05E9\\u05E8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \" \", React.createElement(\"input\", {\n          onClick: () => this.updateOrderFalse(_id, aproved),\n          type: \"button\",\n          value: \"\\u05D1\\u05D8\\u05DC\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })));\n      });\n    } else {\n      throw console.error(\"error\");\n    }\n  }\n\n  renderTableHeader() {\n    let header = [\"מספר \", \"תראיך התחלה\", \"תאריך סיום\", \"שם משתמש\", \" הודעה\", \"האם ההזמנה אושרה\", \"תאריך הזמנה\", \"אשר\", \"בטל\"];\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"  \\u05D4\\u05D6\\u05DE\\u05E0\\u05D5\\u05EA \\u05DC\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8 \"), React.createElement(\"table\", {\n      id: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/Ofir/Documents/GitHub/sadranofesh-1/client/src/pages/Orders.jsx"],"names":["React","Component","api","Orders","constructor","props","componentDidMount","getNotAprovedOrders","then","orders","console","log","setState","data","updateOrderTrue","id","aproved","payload","ordersAproved","res","index","state","findIndex","order","array","splice","updateOrderFalse","bind","orderNotAproved","renderTableData","map","_id","startDate","endDate","userName","note","createdAt","split","error","renderTableHeader","header","key","toUpperCase","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport api from '../api'\r\nimport '../style/ManageUsers.css'\r\n\r\n\r\nclass Orders extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            orders: []\r\n        }\r\n        this.updateOrderTrue = this.updateOrderTrue.bind(this)\r\n        this.orderNotAproved = this.updateOrderFalse.bind(this)\r\n    }\r\n    componentDidMount = async () => {\r\n        await api.getNotAprovedOrders().then(orders => {\r\n            console.log(orders)\r\n\r\n            this.setState({\r\n                orders: orders.data.data\r\n\r\n            })\r\n\r\n\r\n            console.log(' Aproved-orders-List -> render -> orders', orders)\r\n        })\r\n    }\r\n\r\n\r\n    updateOrderTrue = async (id) => {\r\n\r\n        const aproved = \"true\"\r\n        const payload = { aproved }\r\n\r\n        await api.ordersAproved(id, payload).then(res => {\r\n\r\n            let index = this.state.orders.findIndex((order) => order.id = id)\r\n            let array = this.state.orders\r\n\r\n            array.splice(index, 1)\r\n\r\n            this.setState({\r\n                orders: array\r\n            })\r\n        })\r\n    }\r\n    updateOrderFalse = async (id) => {\r\n        const aproved = \"false\"\r\n        const payload = { aproved }\r\n\r\n        await api.ordersAproved(id, payload).then(res => {\r\n\r\n            let index = this.state.orders.findIndex((order) => order.id = id)\r\n            let array = this.state.orders\r\n\r\n            array.splice(index, 1)\r\n\r\n            this.setState({\r\n                orders: array\r\n            })\r\n        })\r\n    }\r\n\r\n    renderTableData() {\r\n        console.log(this.state.orders)\r\n        if (this.state.orders === []) {\r\n            return this.state.orders.map((orders, index) => {\r\n                const { _id, startDate, endDate, userName, aproved, note, createdAt } = orders //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{startDate}</td>\r\n                        <td>{endDate}</td>\r\n                        <td>{userName}</td>\r\n                        <td>{note}</td>\r\n                        <td>{aproved}</td>\r\n                        <td>{createdAt.split(\"T\")[0]}</td>\r\n\r\n                        <td  > <input onClick={() => this.updateOrderTrue(_id, aproved)} type=\"button\" value=\"אשר\" /></td>\r\n                        <td  > <input onClick={() => this.updateOrderFalse(_id, aproved)} type=\"button\" value=\"בטל\" /></td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }else{\r\n            throw console.error(\"error\");\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    renderTableHeader() {\r\n        let header = [\"מספר \", \"תראיך התחלה\", \"תאריך סיום\", \"שם משתמש\", \" הודעה\", \"האם ההזמנה אושרה\", \"תאריך הזמנה\", \"אשר\", \"בטל\"]\r\n        return header.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <h1 id='title'>  הזמנות לאישור </h1>\r\n                <table id='users'>\r\n                    <tbody>\r\n                        <tr>{this.renderTableHeader()}</tr>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Orders"]},"metadata":{},"sourceType":"module"}