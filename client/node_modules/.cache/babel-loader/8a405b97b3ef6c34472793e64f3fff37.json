{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n}); //user api\n\nexport const createUser = user => api.post(`/user`, user).then(() => {});\nexport const getUsers = () => api.post(`/get-users`);\nexport const updateUserById = (id, payload) => api.put(`/user/${id}`, payload);\nexport const deleteUserById = id => api.delete(`/user/${id}`);\nexport const getUserById = id => api.post(`/user-by-id/${id}`);\nexport const getUserByUserName = (username, password) => api.post(`/get-user-by-username/${username}/${password}`); //order api\n\nexport const createOrder = order => api.post(`/order`, order).then(() => {});\nexport const getOrders = () => api.post(`/get-orders`);\nexport const getNotAprovedOrders = () => api.post(`/get-not-aproved-orders`);\nexport const getAprovedOrders = () => api.post(`/get-aproved-orders`);\nexport const ordersAproved = (id, payload) => api.put(`/update-order/${id}`, payload);\nexport const deleteOrderById = id => api.delete(`/delete-order/${id}`);\nexport const getOrdersByUserName = username => api.post(`/get-orders-by-username/${username}`); // messages api\n\nexport const createGlobalMessage = message => api.post(`/message`, user).then(() => {});\nexport const getMessages = () => api.post(`/global-messages/get-messages`); // export const createGlobalMessage = globalMessage => api.post(`/global-messages`, message).then(() => { });\n\nconst apis = {\n  createUser,\n  createOrder,\n  getUsers,\n  getOrders,\n  updateUserById,\n  deleteUserById,\n  deleteOrderById,\n  getUserById,\n  getNotAprovedOrders,\n  getAprovedOrders,\n  ordersAproved,\n  getOrdersByUserName,\n  getUserByUserName,\n  getMessages // createGlobalMessage\n\n};\nexport default apis;","map":{"version":3,"sources":["C:/Users/Ofir/Documents/GitHub/sadranofesh-1/client/src/api/index.js"],"names":["axios","api","create","baseURL","createUser","user","post","then","getUsers","updateUserById","id","payload","put","deleteUserById","delete","getUserById","getUserByUserName","username","password","createOrder","order","getOrders","getNotAprovedOrders","getAprovedOrders","ordersAproved","deleteOrderById","getOrdersByUserName","createGlobalMessage","message","getMessages","apis"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ,C,CAGA;;AAEA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAIJ,GAAG,CAACK,IAAJ,CAAU,OAAV,EAAkBD,IAAlB,EAAwBE,IAAxB,CAA6B,MAAM,CAAG,CAAtC,CAA3B;AACP,OAAO,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACK,IAAJ,CAAU,YAAV,CAAvB;AACP,OAAO,MAAMG,cAAc,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAiBV,GAAG,CAACW,GAAJ,CAAS,SAAQF,EAAG,EAApB,EAAuBC,OAAvB,CAAxC;AACP,OAAO,MAAME,cAAc,GAAGH,EAAE,IAAIT,GAAG,CAACa,MAAJ,CAAY,SAAQJ,EAAG,EAAvB,CAA7B;AACP,OAAO,MAAMK,WAAW,GAAGL,EAAE,IAAIT,GAAG,CAACK,IAAJ,CAAU,eAAcI,EAAG,EAA3B,CAA1B;AACP,OAAO,MAAMM,iBAAiB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwBjB,GAAG,CAACK,IAAJ,CAAU,yBAAwBW,QAAS,IAAGC,QAAS,EAAvD,CAAlD,C,CAGP;;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAInB,GAAG,CAACK,IAAJ,CAAU,QAAV,EAAmBc,KAAnB,EAA0Bb,IAA1B,CAA+B,MAAM,CAAG,CAAxC,CAA7B;AACP,OAAO,MAAMc,SAAS,GAAG,MAAMpB,GAAG,CAACK,IAAJ,CAAU,aAAV,CAAxB;AACP,OAAO,MAAMgB,mBAAmB,GAAG,MAAMrB,GAAG,CAACK,IAAJ,CAAU,yBAAV,CAAlC;AACP,OAAO,MAAMiB,gBAAgB,GAAG,MAAMtB,GAAG,CAACK,IAAJ,CAAU,qBAAV,CAA/B;AACP,OAAO,MAAMkB,aAAa,GAAG,CAACd,EAAD,EAAKC,OAAL,KAAiBV,GAAG,CAACW,GAAJ,CAAS,iBAAgBF,EAAG,EAA5B,EAA+BC,OAA/B,CAAvC;AACP,OAAO,MAAMc,eAAe,GAAGf,EAAE,IAAIT,GAAG,CAACa,MAAJ,CAAY,iBAAgBJ,EAAG,EAA/B,CAA9B;AACP,OAAO,MAAMgB,mBAAmB,GAAGT,QAAQ,IAAIhB,GAAG,CAACK,IAAJ,CAAU,2BAA0BW,QAAS,EAA7C,CAAxC,C,CAEP;;AAEA,OAAO,MAAMU,mBAAmB,GAAGC,OAAO,IAAI3B,GAAG,CAACK,IAAJ,CAAU,UAAV,EAAqBD,IAArB,EAA2BE,IAA3B,CAAgC,MAAM,CAAG,CAAzC,CAAvC;AACP,OAAO,MAAMsB,WAAW,GAAG,MAAM5B,GAAG,CAACK,IAAJ,CAAU,+BAAV,CAA1B,C,CAEP;;AAGA,MAAMwB,IAAI,GAAG;AACX1B,EAAAA,UADW;AAEXe,EAAAA,WAFW;AAGXX,EAAAA,QAHW;AAIXa,EAAAA,SAJW;AAKXZ,EAAAA,cALW;AAMXI,EAAAA,cANW;AAOXY,EAAAA,eAPW;AAQXV,EAAAA,WARW;AASXO,EAAAA,mBATW;AAUXC,EAAAA,gBAVW;AAWXC,EAAAA,aAXW;AAYXE,EAAAA,mBAZW;AAaXV,EAAAA,iBAbW;AAcTa,EAAAA,WAdS,CAeX;;AAfW,CAAb;AAkBA,eAAeC,IAAf","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n})\r\n//user api\r\n\r\nexport const createUser = user => api.post(`/user`, user).then(() => { });\r\nexport const getUsers = () => api.post(`/get-users`)\r\nexport const updateUserById = (id, payload) => api.put(`/user/${id}`, payload)\r\nexport const deleteUserById = id => api.delete(`/user/${id}`)\r\nexport const getUserById = id => api.post(`/user-by-id/${id}`)\r\nexport const getUserByUserName = (username, password) => api.post(`/get-user-by-username/${username}/${password}`)\r\n\r\n\r\n//order api\r\n\r\nexport const createOrder = order => api.post(`/order`, order).then(() => { });\r\nexport const getOrders = () => api.post(`/get-orders`)\r\nexport const getNotAprovedOrders = () => api.post(`/get-not-aproved-orders`)\r\nexport const getAprovedOrders = () => api.post(`/get-aproved-orders`)\r\nexport const ordersAproved = (id, payload) => api.put(`/update-order/${id}`, payload)\r\nexport const deleteOrderById = id => api.delete(`/delete-order/${id}`)\r\nexport const getOrdersByUserName = username => api.post(`/get-orders-by-username/${username}`)\r\n\r\n// messages api\r\n\r\nexport const createGlobalMessage = message => api.post(`/message`, user).then(() => { });\r\nexport const getMessages = () => api.post(`/global-messages/get-messages`)\r\n\r\n// export const createGlobalMessage = globalMessage => api.post(`/global-messages`, message).then(() => { });\r\n\r\n\r\nconst apis = {\r\n  createUser,\r\n  createOrder,\r\n  getUsers,\r\n  getOrders,\r\n  updateUserById,\r\n  deleteUserById,\r\n  deleteOrderById,\r\n  getUserById,\r\n  getNotAprovedOrders,\r\n  getAprovedOrders,\r\n  ordersAproved,\r\n  getOrdersByUserName,\r\n  getUserByUserName\r\n  , getMessages\r\n  // createGlobalMessage\r\n}\r\n\r\nexport default apis"]},"metadata":{},"sourceType":"module"}